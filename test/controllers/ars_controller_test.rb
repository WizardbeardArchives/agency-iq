require 'test_helper'

class ArsControllerTest < ActionController::TestCase
  setup do
    @ar = ars(:one)
  end

  test "should get index" do
    get :index
    assert_response :success
    assert_not_nil assigns(:ars)
  end

  test "should get new" do
    get :new
    assert_response :success
  end

  test "should create ar" do
    assert_difference('Ar.count') do
      post :create, ar: { AR_120: @ar.AR_120, AR_30: @ar.AR_30, AR_60: @ar.AR_60, AR_90: @ar.AR_90, AR_ADDED_BY: @ar.AR_ADDED_BY, AR_ADDED_WHEN: @ar.AR_ADDED_WHEN, AR_ADDRESS1: @ar.AR_ADDRESS1, AR_ADDRESS2: @ar.AR_ADDRESS2, AR_ADDRESS3: @ar.AR_ADDRESS3, AR_ADDRESS4: @ar.AR_ADDRESS4, AR_ADDRESS5: @ar.AR_ADDRESS5, AR_ADDRESS6: @ar.AR_ADDRESS6, AR_ADV_PMT: @ar.AR_ADV_PMT, AR_ADV_PMT_GL: @ar.AR_ADV_PMT_GL, AR_AE: @ar.AR_AE, AR_AGENCY_CONTACT: @ar.AR_AGENCY_CONTACT, AR_AMT_PAID: @ar.AR_AMT_PAID, AR_APPROVAL1: @ar.AR_APPROVAL1, AR_APPROVAL2: @ar.AR_APPROVAL2, AR_APPROVAL3: @ar.AR_APPROVAL3, AR_APPROVED: @ar.AR_APPROVED, AR_APPROVED_BY: @ar.AR_APPROVED_BY, AR_APPROVED_DATE: @ar.AR_APPROVED_DATE, AR_BILLING_TYPE: @ar.AR_BILLING_TYPE, AR_BILL_INSTRUCTIONS: @ar.AR_BILL_INSTRUCTIONS, AR_BIZDEV_AE: @ar.AR_BIZDEV_AE, AR_CHARGE_NUM: @ar.AR_CHARGE_NUM, AR_CLIENT_CONTACT: @ar.AR_CLIENT_CONTACT, AR_CLIENT_NUM: @ar.AR_CLIENT_NUM, AR_COMMISSIONABLE_AMT: @ar.AR_COMMISSIONABLE_AMT, AR_COMM_AMT: @ar.AR_COMM_AMT, AR_COMM_DESC: @ar.AR_COMM_DESC, AR_COMM_GL: @ar.AR_COMM_GL, AR_COMM_RATE_AE: @ar.AR_COMM_RATE_AE, AR_COMM_RATE_BIZ: @ar.AR_COMM_RATE_BIZ, AR_COUNT: @ar.AR_COUNT, AR_CURR: @ar.AR_CURR, AR_DATE: @ar.AR_DATE, AR_DATE_PAID: @ar.AR_DATE_PAID, AR_DAYS: @ar.AR_DAYS, AR_DESC: @ar.AR_DESC, AR_DGL: @ar.AR_DGL, AR_DISC_AMT: @ar.AR_DISC_AMT, AR_DISC_DUE: @ar.AR_DISC_DUE, AR_DUE_DATE: @ar.AR_DUE_DATE, AR_EDITED_BY: @ar.AR_EDITED_BY, AR_EDITED_WHEN: @ar.AR_EDITED_WHEN, AR_EXPORTED: @ar.AR_EXPORTED, AR_FINANCE_AMT: @ar.AR_FINANCE_AMT, AR_FINANCE_CGL: @ar.AR_FINANCE_CGL, AR_FINANCE_CHG: @ar.AR_FINANCE_CHG, AR_JOB_NUM: @ar.AR_JOB_NUM, AR_JUMP: @ar.AR_JUMP, AR_KEY: @ar.AR_KEY, AR_KIND: @ar.AR_KIND, AR_MISC_AMT1: @ar.AR_MISC_AMT1, AR_MISC_AMT2: @ar.AR_MISC_AMT2, AR_MISC_DESC1: @ar.AR_MISC_DESC1, AR_MISC_DESC2: @ar.AR_MISC_DESC2, AR_MISC_GL1: @ar.AR_MISC_GL1, AR_MISC_GL2: @ar.AR_MISC_GL2, AR_NUM: @ar.AR_NUM, AR_OPEN: @ar.AR_OPEN, AR_PC: @ar.AR_PC, AR_PERIOD: @ar.AR_PERIOD, AR_PMT_NEXT_ACTION: @ar.AR_PMT_NEXT_ACTION, AR_PMT_NEXT_DATE: @ar.AR_PMT_NEXT_DATE, AR_PMT_NEXT_NOTE: @ar.AR_PMT_NEXT_NOTE, AR_PMT_NEXT_NUM: @ar.AR_PMT_NEXT_NUM, AR_PMT_NEXT_WHO: @ar.AR_PMT_NEXT_WHO, AR_PMT_STATUS: @ar.AR_PMT_STATUS, AR_PMT_STATUS_NOTE: @ar.AR_PMT_STATUS_NOTE, AR_PO: @ar.AR_PO, AR_POSTED: @ar.AR_POSTED, AR_POSTED_BY: @ar.AR_POSTED_BY, AR_POSTED_WHEN: @ar.AR_POSTED_WHEN, AR_PRINT_EST: @ar.AR_PRINT_EST, AR_RETAINER_AMT: @ar.AR_RETAINER_AMT, AR_RETAINER_GL: @ar.AR_RETAINER_GL, AR_RETAINR_NOTE: @ar.AR_RETAINR_NOTE, AR_RETURN_DATE: @ar.AR_RETURN_DATE, AR_ROLL_UP: @ar.AR_ROLL_UP, AR_SHIP_ADDRESS1: @ar.AR_SHIP_ADDRESS1, AR_SHIP_ADDRESS2: @ar.AR_SHIP_ADDRESS2, AR_SHIP_ADDRESS3: @ar.AR_SHIP_ADDRESS3, AR_SHIP_ADDRESS4: @ar.AR_SHIP_ADDRESS4, AR_SHIP_ADDRESS5: @ar.AR_SHIP_ADDRESS5, AR_SHIP_ADDRESS6: @ar.AR_SHIP_ADDRESS6, AR_SHIP_ORG: @ar.AR_SHIP_ORG, AR_SHOW_HOURS: @ar.AR_SHOW_HOURS, AR_SHOW_SPECS: @ar.AR_SHOW_SPECS, AR_SHOW_TOTALS: @ar.AR_SHOW_TOTALS, AR_STATUS: @ar.AR_STATUS, AR_TAXABLE1: @ar.AR_TAXABLE1, AR_TAXABLE2: @ar.AR_TAXABLE2, AR_TAX_AMT1: @ar.AR_TAX_AMT1, AR_TAX_AMT2: @ar.AR_TAX_AMT2, AR_TAX_AREA: @ar.AR_TAX_AREA, AR_TAX_CGL1: @ar.AR_TAX_CGL1, AR_TAX_CGL2: @ar.AR_TAX_CGL2, AR_TAX_RATE1: @ar.AR_TAX_RATE1, AR_TAX_RATE2: @ar.AR_TAX_RATE2, AR_TERMS1: @ar.AR_TERMS1, AR_TERMS2: @ar.AR_TERMS2, AR_TERMS3: @ar.AR_TERMS3, AR_TERMS: @ar.AR_TERMS, AR_TO1: @ar.AR_TO1, AR_TO2: @ar.AR_TO2, AR_TO3: @ar.AR_TO3, AR_TO4: @ar.AR_TO4, AR_TO5: @ar.AR_TO5, AR_TOTAL: @ar.AR_TOTAL, AR_UNPAID: @ar.AR_UNPAID, AR_ZERO_AS: @ar.AR_ZERO_AS, primaryKey: @ar.primaryKey }
    end

    assert_redirected_to ar_path(assigns(:ar))
  end

  test "should show ar" do
    get :show, id: @ar
    assert_response :success
  end

  test "should get edit" do
    get :edit, id: @ar
    assert_response :success
  end

  test "should update ar" do
    patch :update, id: @ar, ar: { AR_120: @ar.AR_120, AR_30: @ar.AR_30, AR_60: @ar.AR_60, AR_90: @ar.AR_90, AR_ADDED_BY: @ar.AR_ADDED_BY, AR_ADDED_WHEN: @ar.AR_ADDED_WHEN, AR_ADDRESS1: @ar.AR_ADDRESS1, AR_ADDRESS2: @ar.AR_ADDRESS2, AR_ADDRESS3: @ar.AR_ADDRESS3, AR_ADDRESS4: @ar.AR_ADDRESS4, AR_ADDRESS5: @ar.AR_ADDRESS5, AR_ADDRESS6: @ar.AR_ADDRESS6, AR_ADV_PMT: @ar.AR_ADV_PMT, AR_ADV_PMT_GL: @ar.AR_ADV_PMT_GL, AR_AE: @ar.AR_AE, AR_AGENCY_CONTACT: @ar.AR_AGENCY_CONTACT, AR_AMT_PAID: @ar.AR_AMT_PAID, AR_APPROVAL1: @ar.AR_APPROVAL1, AR_APPROVAL2: @ar.AR_APPROVAL2, AR_APPROVAL3: @ar.AR_APPROVAL3, AR_APPROVED: @ar.AR_APPROVED, AR_APPROVED_BY: @ar.AR_APPROVED_BY, AR_APPROVED_DATE: @ar.AR_APPROVED_DATE, AR_BILLING_TYPE: @ar.AR_BILLING_TYPE, AR_BILL_INSTRUCTIONS: @ar.AR_BILL_INSTRUCTIONS, AR_BIZDEV_AE: @ar.AR_BIZDEV_AE, AR_CHARGE_NUM: @ar.AR_CHARGE_NUM, AR_CLIENT_CONTACT: @ar.AR_CLIENT_CONTACT, AR_CLIENT_NUM: @ar.AR_CLIENT_NUM, AR_COMMISSIONABLE_AMT: @ar.AR_COMMISSIONABLE_AMT, AR_COMM_AMT: @ar.AR_COMM_AMT, AR_COMM_DESC: @ar.AR_COMM_DESC, AR_COMM_GL: @ar.AR_COMM_GL, AR_COMM_RATE_AE: @ar.AR_COMM_RATE_AE, AR_COMM_RATE_BIZ: @ar.AR_COMM_RATE_BIZ, AR_COUNT: @ar.AR_COUNT, AR_CURR: @ar.AR_CURR, AR_DATE: @ar.AR_DATE, AR_DATE_PAID: @ar.AR_DATE_PAID, AR_DAYS: @ar.AR_DAYS, AR_DESC: @ar.AR_DESC, AR_DGL: @ar.AR_DGL, AR_DISC_AMT: @ar.AR_DISC_AMT, AR_DISC_DUE: @ar.AR_DISC_DUE, AR_DUE_DATE: @ar.AR_DUE_DATE, AR_EDITED_BY: @ar.AR_EDITED_BY, AR_EDITED_WHEN: @ar.AR_EDITED_WHEN, AR_EXPORTED: @ar.AR_EXPORTED, AR_FINANCE_AMT: @ar.AR_FINANCE_AMT, AR_FINANCE_CGL: @ar.AR_FINANCE_CGL, AR_FINANCE_CHG: @ar.AR_FINANCE_CHG, AR_JOB_NUM: @ar.AR_JOB_NUM, AR_JUMP: @ar.AR_JUMP, AR_KEY: @ar.AR_KEY, AR_KIND: @ar.AR_KIND, AR_MISC_AMT1: @ar.AR_MISC_AMT1, AR_MISC_AMT2: @ar.AR_MISC_AMT2, AR_MISC_DESC1: @ar.AR_MISC_DESC1, AR_MISC_DESC2: @ar.AR_MISC_DESC2, AR_MISC_GL1: @ar.AR_MISC_GL1, AR_MISC_GL2: @ar.AR_MISC_GL2, AR_NUM: @ar.AR_NUM, AR_OPEN: @ar.AR_OPEN, AR_PC: @ar.AR_PC, AR_PERIOD: @ar.AR_PERIOD, AR_PMT_NEXT_ACTION: @ar.AR_PMT_NEXT_ACTION, AR_PMT_NEXT_DATE: @ar.AR_PMT_NEXT_DATE, AR_PMT_NEXT_NOTE: @ar.AR_PMT_NEXT_NOTE, AR_PMT_NEXT_NUM: @ar.AR_PMT_NEXT_NUM, AR_PMT_NEXT_WHO: @ar.AR_PMT_NEXT_WHO, AR_PMT_STATUS: @ar.AR_PMT_STATUS, AR_PMT_STATUS_NOTE: @ar.AR_PMT_STATUS_NOTE, AR_PO: @ar.AR_PO, AR_POSTED: @ar.AR_POSTED, AR_POSTED_BY: @ar.AR_POSTED_BY, AR_POSTED_WHEN: @ar.AR_POSTED_WHEN, AR_PRINT_EST: @ar.AR_PRINT_EST, AR_RETAINER_AMT: @ar.AR_RETAINER_AMT, AR_RETAINER_GL: @ar.AR_RETAINER_GL, AR_RETAINR_NOTE: @ar.AR_RETAINR_NOTE, AR_RETURN_DATE: @ar.AR_RETURN_DATE, AR_ROLL_UP: @ar.AR_ROLL_UP, AR_SHIP_ADDRESS1: @ar.AR_SHIP_ADDRESS1, AR_SHIP_ADDRESS2: @ar.AR_SHIP_ADDRESS2, AR_SHIP_ADDRESS3: @ar.AR_SHIP_ADDRESS3, AR_SHIP_ADDRESS4: @ar.AR_SHIP_ADDRESS4, AR_SHIP_ADDRESS5: @ar.AR_SHIP_ADDRESS5, AR_SHIP_ADDRESS6: @ar.AR_SHIP_ADDRESS6, AR_SHIP_ORG: @ar.AR_SHIP_ORG, AR_SHOW_HOURS: @ar.AR_SHOW_HOURS, AR_SHOW_SPECS: @ar.AR_SHOW_SPECS, AR_SHOW_TOTALS: @ar.AR_SHOW_TOTALS, AR_STATUS: @ar.AR_STATUS, AR_TAXABLE1: @ar.AR_TAXABLE1, AR_TAXABLE2: @ar.AR_TAXABLE2, AR_TAX_AMT1: @ar.AR_TAX_AMT1, AR_TAX_AMT2: @ar.AR_TAX_AMT2, AR_TAX_AREA: @ar.AR_TAX_AREA, AR_TAX_CGL1: @ar.AR_TAX_CGL1, AR_TAX_CGL2: @ar.AR_TAX_CGL2, AR_TAX_RATE1: @ar.AR_TAX_RATE1, AR_TAX_RATE2: @ar.AR_TAX_RATE2, AR_TERMS1: @ar.AR_TERMS1, AR_TERMS2: @ar.AR_TERMS2, AR_TERMS3: @ar.AR_TERMS3, AR_TERMS: @ar.AR_TERMS, AR_TO1: @ar.AR_TO1, AR_TO2: @ar.AR_TO2, AR_TO3: @ar.AR_TO3, AR_TO4: @ar.AR_TO4, AR_TO5: @ar.AR_TO5, AR_TOTAL: @ar.AR_TOTAL, AR_UNPAID: @ar.AR_UNPAID, AR_ZERO_AS: @ar.AR_ZERO_AS, primaryKey: @ar.primaryKey }
    assert_redirected_to ar_path(assigns(:ar))
  end

  test "should destroy ar" do
    assert_difference('Ar.count', -1) do
      delete :destroy, id: @ar
    end

    assert_redirected_to ars_path
  end
end
